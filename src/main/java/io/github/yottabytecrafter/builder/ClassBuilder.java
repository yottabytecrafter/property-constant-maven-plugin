package io.github.yottabytecrafter.builder;

import io.github.yottabytecrafter.utils.DateTimeUtils;

public class ClassBuilder {

    private final StringBuilder code = new StringBuilder();
    private final String className;
    private final String packageName;
    private String pluginVersion;
    private String sourcePropertiesFileName; // To store the source file name

    public ClassBuilder(String className, String packageName, String pluginVersion) {
        this.className = className;
        this.packageName = packageName;
        this.pluginVersion = pluginVersion;
    }

    public ClassBuilder addGenerated(String sourceFile) {
        this.sourcePropertiesFileName = sourceFile; // Store for class Javadoc
        code.append("@Generated(\n")
                .append("    value = \"io.github.yottabytecrafter.PropertiesGeneratorMojo\",\n")
                .append("    date = \"").append(DateTimeUtils.getCurrentDateTime()).append("\",\n");
        addVersionToComments(this.sourcePropertiesFileName);
        code.append(")\n");
        return this;
    }

    private void addVersionToComments(String sourceFile) {
        String javaVersion = System.getProperty("java.version");
        String javaVendor = System.getProperty("java.vendor");

        if (pluginVersion == null || pluginVersion.isEmpty()) {
            pluginVersion = "unknown";
        }

        String comments = String.format("Generated from %s, version: %s, environment: Java %s (%s)",
                sourceFile, pluginVersion, javaVersion, javaVendor);
        code.append("    comments = \"").append(comments).append("\"\n");
    }

    public ClassBuilder makeClassFinal() {
        code.append("public final class ").append(className).append(" {\n\n");
        return this;
    }

    public ClassBuilder addPrivateConstructor() {
        code.append("    private ").append(className).append("() {\n")
                .append("        // Prevent instantiation\n")
                .append("    }\n\n");
        return this;
    }

    public ClassBuilder addConstant(String originalKey, String constantName, String escapedValue) {
        code.append("    /**\n")
            .append("     * Constant for property key: '").append(originalKey).append("'.\n")
            // .append("     * Original value: '").append(originalValue).append("'.\n") // Optional: Decided against for now due to potential length and escaping complexity here
            .append("     */\n");
        code.append("    public static final String ")
                .append(constantName)
                .append(" = \"")
                .append(escapedValue)
                .append("\";\n\n"); // Added an extra newline for spacing between constants
        return this;
    }

    public String build() {
        StringBuilder result = new StringBuilder();
        result.append("package ").append(packageName).append(";\n\n");
        result.append("import javax.annotation.Generated;\n\n");

        // Add class-level Javadoc
        if (this.sourcePropertiesFileName != null && !this.sourcePropertiesFileName.isEmpty()) {
            result.append("/**\n")
                  .append(" * Contains constants generated from the properties file: '")
                  .append(this.sourcePropertiesFileName).append("'.\n")
                  .append(" * <p>\n")
                  .append(" * This class is automatically generated by the property-constant-maven-plugin.\n")
                  .append(" * Do not modify this file directly.\n")
                  .append(" */\n");
        }

        result.append(code); // Append @Generated, class definition, constants
        result.append("}\n");
        return result.toString();
    }
}
